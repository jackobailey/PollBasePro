% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simplify_party_names.R
\name{simplify_party_names}
\alias{simplify_party_names}
\title{Simplify British Political Party Names}
\usage{
simplify_party_names(
  x,
  party_names = list(`^con|^tor|^thecon|^thetor` = "Conservatives", `^lab|^thelab` =
    "Labour", `^lib|^thelib` = "Liberals etc.",
    `^snp|^thesnp|^scotnat|^thescottishnat|^scottishnat` = "SNP", `^pc|^plaid` =
    "Plaid Cymru"),
  nat = TRUE,
  drop_dk = TRUE
)
}
\arguments{
\item{x}{A vector of party names.}

\item{party_names}{A list of regular expressions to detect for each party, followed by the name to give the party. Note, the function converts all text to lower-case and removes any whitespace prior to simplification. E.g. list("^con|^tor" = "Conservative", "^lab" = "Labour).}

\item{nat}{Include nationalist parties or mark them as "Other"? Defaults to TRUE and includes them by default.}

\item{drop_dk}{Mark "Don't know", "Refused", etc. as missing? Defaults to TRUE.}
}
\value{
A vector of party names.
}
\description{
For a majoritarian democracy, Britain has quite a few parties. Further, some of the main parties come in more than one variant (e.g. Labour & Co-op). This function takes a vector of party names, simplifies them, and then returns them to the user. It also includes some useful options to customise the output.
}
\examples{
simplify_party_names(c("Labour", "Lab", "Lib", "Conservatives", "Tories"))
}
